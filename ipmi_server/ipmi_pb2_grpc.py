# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ipmi_pb2 as ipmi__pb2


class IPMIStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Cycle = channel.unary_unary(
        '/IPMI/Cycle',
        request_serializer=ipmi__pb2.IPMIRequest.SerializeToString,
        response_deserializer=ipmi__pb2.IPMIResponse.FromString,
        )
    self.On = channel.unary_unary(
        '/IPMI/On',
        request_serializer=ipmi__pb2.IPMIRequest.SerializeToString,
        response_deserializer=ipmi__pb2.IPMIResponse.FromString,
        )
    self.Off = channel.unary_unary(
        '/IPMI/Off',
        request_serializer=ipmi__pb2.IPMIRequest.SerializeToString,
        response_deserializer=ipmi__pb2.IPMIResponse.FromString,
        )


class IPMIServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Cycle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def On(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Off(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_IPMIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Cycle': grpc.unary_unary_rpc_method_handler(
          servicer.Cycle,
          request_deserializer=ipmi__pb2.IPMIRequest.FromString,
          response_serializer=ipmi__pb2.IPMIResponse.SerializeToString,
      ),
      'On': grpc.unary_unary_rpc_method_handler(
          servicer.On,
          request_deserializer=ipmi__pb2.IPMIRequest.FromString,
          response_serializer=ipmi__pb2.IPMIResponse.SerializeToString,
      ),
      'Off': grpc.unary_unary_rpc_method_handler(
          servicer.Off,
          request_deserializer=ipmi__pb2.IPMIRequest.FromString,
          response_serializer=ipmi__pb2.IPMIResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'IPMI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
