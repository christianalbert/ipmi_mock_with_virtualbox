# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ipmi.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ipmi.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\nipmi.proto\"\x19\n\x0bIPMIRequest\x12\n\n\x02ip\x18\x01 \x01(\t\"\x1e\n\x0cIPMIResponse\x12\x0e\n\x06result\x18\x01 \x01(\x08\x32y\n\x04IPMI\x12&\n\x05\x43ycle\x12\x0c.IPMIRequest\x1a\r.IPMIResponse\"\x00\x12#\n\x02On\x12\x0c.IPMIRequest\x1a\r.IPMIResponse\"\x00\x12$\n\x03Off\x12\x0c.IPMIRequest\x1a\r.IPMIResponse\"\x00\x62\x06proto3')
)




_IPMIREQUEST = _descriptor.Descriptor(
  name='IPMIRequest',
  full_name='IPMIRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='IPMIRequest.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14,
  serialized_end=39,
)


_IPMIRESPONSE = _descriptor.Descriptor(
  name='IPMIResponse',
  full_name='IPMIResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='IPMIResponse.result', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=71,
)

DESCRIPTOR.message_types_by_name['IPMIRequest'] = _IPMIREQUEST
DESCRIPTOR.message_types_by_name['IPMIResponse'] = _IPMIRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

IPMIRequest = _reflection.GeneratedProtocolMessageType('IPMIRequest', (_message.Message,), dict(
  DESCRIPTOR = _IPMIREQUEST,
  __module__ = 'ipmi_pb2'
  # @@protoc_insertion_point(class_scope:IPMIRequest)
  ))
_sym_db.RegisterMessage(IPMIRequest)

IPMIResponse = _reflection.GeneratedProtocolMessageType('IPMIResponse', (_message.Message,), dict(
  DESCRIPTOR = _IPMIRESPONSE,
  __module__ = 'ipmi_pb2'
  # @@protoc_insertion_point(class_scope:IPMIResponse)
  ))
_sym_db.RegisterMessage(IPMIResponse)



_IPMI = _descriptor.ServiceDescriptor(
  name='IPMI',
  full_name='IPMI',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=73,
  serialized_end=194,
  methods=[
  _descriptor.MethodDescriptor(
    name='Cycle',
    full_name='IPMI.Cycle',
    index=0,
    containing_service=None,
    input_type=_IPMIREQUEST,
    output_type=_IPMIRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='On',
    full_name='IPMI.On',
    index=1,
    containing_service=None,
    input_type=_IPMIREQUEST,
    output_type=_IPMIRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Off',
    full_name='IPMI.Off',
    index=2,
    containing_service=None,
    input_type=_IPMIREQUEST,
    output_type=_IPMIRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_IPMI)

DESCRIPTOR.services_by_name['IPMI'] = _IPMI

# @@protoc_insertion_point(module_scope)
